generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Donor {
  id          Int     @id @default(autoincrement())
  Food        Food[]  @relation("DonorFood")
  ImpactReport ImpactReport[]
  name       String
  email       String  @unique
  password    String
  phone   String
  address    String
  cnpj        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Beneficiary {
  id          Int      @id @default(autoincrement())
  collectionPoints   CollectionPoints[]
  notificationEngagements NotificationEngagement[]
  name       String
  email       String
  phone    String
  address    String
  cpf         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CollectionPoints {
  id          Int     @id @default(autoincrement())
  food        Food[]
  beneficiaryId Int
  beneficiary      Beneficiary @relation(fields: [beneficiaryId], references: [id])
  name        String
  address   String
  phone    String
  hoursOfOperetion DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

//--------------------------------------------------------------------------------//

model NotificationEngagement {
  id Int @id @default(autoincrement())
  foodId Int
  food Food @relation(fields: [foodId], references: [id])
  beneficiary Beneficiary @relation(fields: [beneficiaryId], references: [id])
  beneficiaryId Int
  NotificationType NotificationType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum NotificationType {
  sent
  received
}

model Food {
  id          Int     @id @default(autoincrement())
  donorId     Int
  donor       Donor   @relation("DonorFood", fields: [donorId], references: [id])
  collectionPointsId  Int
  collectionPoints    CollectionPoints @relation(fields: [collectionPointsId], references: [id])
  notificationEngagements NotificationEngagement[]
  name       String
  validity    DateTime
  quantity Int
  category  String
  description   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ImpactReport {
  id          Int      @id @default(autoincrement())
  donorId Int
  donor    Donor @relation(fields: [donorId], references: [id])
  title       String
  description String
  savedFoodKg Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
